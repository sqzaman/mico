<?php


/**
 * Implements hook_permission().
 */
function mico_user_permission() {
    return array(
        'access registration progress' => array(
            'title' => t('Access Registration Progress'),
        ),
    );
}



/**
 * Implements hook_menu().
 */
function mico_user_menu() {
    $items = array();

    $items['mico/user/import/membership'] = array(
        'page callback' => '_mico_user_send_purchase_notification',
        'access arguments' => array('access administration pages'),
        'type' => MENU_CALLBACK,
    );

    $items['mico/user/list'] = array(
        'page callback' => '_mico_user_list',
        'access arguments' => array('access registration progress'),
        'type' => MENU_CALLBACK,
    );

    $items['mico/user/list/summary'] = array(
        'page callback' => '_mico_user_list_summary',
        'access arguments' => array('access registration progress'),
        'type' => MENU_CALLBACK,
    );

    return $items;
}

/**
 * @return string
 */
function _mico_user_list_summary(){
    $sql = "SELECT DATE(FROM_UNIXTIME(u.created)) AS `date`, COUNT(*) AS total FROM users u WHERE u.uid> 0 GROUP BY DATE(FROM_UNIXTIME(u.created)) ORDER BY `date` DESC";
    $rows = db_query($sql)->fetchAll(PDO::FETCH_OBJ);
    return theme('mico_user_registration_progress_list_summary', array('rows' => $rows));
}

function _mico_user_list(){
    $sql = "SELECT u.uid, u.mail, u.created, u.access, u.login, m.membership_id, m.status, m.payment_transaction_id, fn.field_first_name_value, ln.field_last_name_value, uw.field_user_wallet_value  FROM {users} u
  LEFT JOIN smscoin_membership m ON(u.uid=m.uid)
  LEFT JOIN {profile} p ON(p.uid=u.uid) 
  LEFT JOIN field_data_field_first_name fn ON (fn.entity_id=p.pid) 
  LEFT JOIN field_data_field_last_name ln ON(ln.entity_id=p.pid)
   LEFT JOIN field_data_field_user_wallet uw ON (p.pid=uw.entity_id)
   GROUP BY u.mail ORDER BY u.created DESC";

    $users = db_query($sql)->fetchAll(PDO::FETCH_OBJ);
    return theme('mico_user_registration_progress_list', array('users' => $users));
}


/**
 * Implementation of hook_form_alter().
 */
function mico_user_form_alter(&$form, &$form_state, $form_id) {

    if($form_id == 'user_admin_settings') {
        //print_r($form);
        $form['email_admin_created']['#description'] .= '<br />' . t('Also available variables are: ') . '!profile_first_name, !profile_last_name, !profile_full_name';
        $form['email_pending_approval']['#description'] .= '<br />' . t('Also available variables are: ') . '!profile_first_name, !profile_last_name, !profile_full_name';
        $form['email_no_approval_required']['#description'] .= '<br />' . t('Also available variables are: ') . '!profile_first_name, !profile_last_name, !profile_full_name';
        $form['email_password_reset']['#description'] .= '<br />' . t('Also available variables are: ') . '!profile_first_name, !profile_last_name, !profile_full_name';
        $form['email_activated']['#description'] .= '<br />' . t('Also available variables are: ') . '!profile_first_name, !profile_last_name, !profile_full_name';
        $form['email_blocked']['#description'] .= '<br />' . t('Also available variables are: ') . '!profile_first_name, !profile_last_name, !profile_full_name';
        $form['email_cancel_confirm']['#description'] .= '<br />' . t('Also available variables are: ') . '!profile_first_name, !profile_last_name, !profile_full_name';
        $form['email_canceled']['#description'] .= '<br />' . t('Also available variables are: ') . '!profile_first_name, !profile_last_name, !profile_full_name';
        $form['email_canceled']['#description'] .= '<br />' . t('Also available variables are: ') . '!profile_first_name, !profile_last_name, !profile_full_name';
    }

}
/**
 * Implements hook_mail().
 */
function mico_user_mail($key, &$message, $params)
{
    switch ($key) {
        case 'purchase_notification_email':
            $message['headers']['Content-Type'] = "text/html";
            $message['subject'] = "Welcome to Speed Mining Service - スピードマイニングへようこそ!";
            $body = theme('mico_user_purchase_notification_email', array('info' => $params['info']));
            $message['body'][] = $body;
            break;
        case 'free_membership_notice_email':
            $message['headers']['Content-Type'] = "text/html";
            $message['subject'] = "スピードマイニングのニュース - Speed Mining Service News";
            $body = theme('free_membership_notice_email_content', array('info' => $params['info']));
            $message['body'][] = $body;
            break;
        case 'profit_distribution_notice_email':
            $message['headers']['Content-Type'] = "text/html";
            $message['subject'] = "スピードマイニングのニュース - Speed Mining Service News";
            $body = theme('profit_distribution_notice_email_content', array('info' => $params['info']));
            $message['body'][] = $body;
            break;
    }
}

/**
 * Implementation of hook_mail_alter().
 */
function mico_user_mail_alter(&$message) {
   //$output = print_r($message, true);
   // file_put_contents('C:\xampp\htdocs\message_zaman.txt', $output);
    switch ($message['id']) {
        case "user_register_admin_created":
        case "user_register_no_approval_required":
        case "user_register_pending_approval":
        case "user_password_reset":
        case "user_status_blocked":
        case "user_status_deleted":
        case "user_registrationpassword_register":
            if($message['params']['account']->profile_main) {
                $profile = $message['params']['account']->profile_main;
            } else {
                $profile = profile2_by_uid_load($message['params']['account']->uid, 'main_profile');
            }
        //file_put_contents('C:\xampp\htdocs\message_zaman_1.txt', print_r($profile, true));
        $token_replacements = array(
            '!profile_first_name' => $profile['field_first_name'][LANGUAGE_NONE][0]['value'],
            '!profile_last_name' => $profile['field_last_name'][LANGUAGE_NONE][0]['value'],
            '!profile_full_name' => $profile['field_first_name'][LANGUAGE_NONE][0]['value'] . ' ' . $message['params']['account']->profile_main['field_last_name'][LANGUAGE_NONE][0]['value'],

        );

      // You can also use $message['params']['account']-&amp;gt;uid to get more values related to the user like number of new messages (privatemsg) he/she got on the site
      $message['subject'] = strtr($message['subject'], $token_replacements);
      $message['body'][0] = strtr($message['body'][0], $token_replacements);
      break;
     /* default:
          $token_replacements = array(
              '!profile_first_name' => $message['params']['account']->profile_main['field_first_name'][LANGUAGE_NONE][0]['value'],
              '!profile_last_name' => $message['params']['account']->profile_main['field_last_name'][LANGUAGE_NONE][0]['value'],
              '!profile_full_name' => $message['params']['account']->profile_main['field_first_name'][LANGUAGE_NONE][0]['value'] . ' ' . $message['params']['account']->profile_main['field_last_name'][LANGUAGE_NONE][0]['value'],

          );
          // You can also use $message['params']['account']-&amp;gt;uid to get more values related to the user like number of new messages (privatemsg) he/she got on the site
          $message['subject'] = strtr($message['subject'], $token_replacements);
          $message['body'][0] = strtr($message['body'][0], $token_replacements);
*/
    }
}

/**
 * Implementation of hook_theme().
 */
function mico_user_theme() {
    return array(
        'mico_user_purchase_notification_email' => array(
            'variables' => array('info' => NULL),
            'template' => 'mico-user-purchase-notification-email',
            'path' => drupal_get_path('module', 'mico_user') . '/templates'
        ),
        'mico_user_registration_progress_list' => array(
            'variables' => array('users' => NULL),
            'template' => 'mico-user-registration-progress-list',
            'path' => drupal_get_path('module', 'mico_user') . '/templates'
        ),
        'mico_user_registration_progress_list_summary' => array(
            'variables' => array('rows' => NULL),
            'template' => 'mico-user-registration-progress-list-summary',
            'path' => drupal_get_path('module', 'mico_user') . '/templates'
        ),
        'free_membership_notice_email_content' => array(
            'variables' => array('info' => NULL),
            'template' => 'mico-user-hardfork1-notification-email',
            'path' => drupal_get_path('module', 'mico_user') . '/templates'
        ),
        'profit_distribution_notice_email_content' => array(
            'variables' => array('info' => NULL),
            'template' => 'mico-profit-distribution-notification-email',
            'path' => drupal_get_path('module', 'mico_user') . '/templates'
        ),
    );
}

function _mico_user_send_purchase_notification(){
    //$message = drupal_mail('mico_core', 'token_reservation_confirmation_email', $to, $language, $params, 'mailer@smscoin.jp', TRUE);
    echo "email notification sending start  ing.....\r\n";

    // 1st version sql

    $sql = "SELECT * 
FROM (
    SELECT * FROM token_reservation WHERE uid IS NOT NULL
    ORDER BY reservation_time DESC
) AS sub
GROUP BY sub.user_email";

    /*
        // 2nd version sql
        $sql = "SELECT * FROM token_reservation WHERE uid IN(
    SELECT uid FROM users WHERE `status`=0 AND uid IN (SELECT uid
    FROM (
        SELECT * FROM token_reservation WHERE uid IS NOT NULL
        ORDER BY reservation_time DESC
    ) AS sub
    GROUP BY sub.user_email
    )
    )";
         */
    /*
    $sql = "SELECT *
FROM (
    SELECT * FROM token_reservation WHERE uid IS NOT NULL
    ORDER BY reservation_time DESC
) AS sub WHERE  id >= 440 AND id NOT IN (441, 442)
GROUP BY sub.user_email";
        */
    $users =   db_query($sql)->fetchAll();

    global $language;
    $count = 1;
    foreach($users as $user){
        //$body = theme("mico_user_purchase_notification_email", array('info' => $user));
        //echo $body;
        //$user->user_email = "siriwat@bluewall.jpn.com";
        $message = drupal_mail('mico_user', 'purchase_notification_email', trim($user->user_email), $language, array('info' => $user), 'mailer@smscoin.jp', TRUE);
        echo "$count. email notification sent to $user->user_email\r\n";
        $count++;
    }

    echo "all email notification has been sent off.\r\n";

}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function mico_user_form_user_register_form_alter(&$form, &$form_state) {
    global $language, $base_url;
    if (user_access('administer users')) {
        return;
    }
    $form['terms_of_use'] = array(
        '#prefix' => '<div id="terms-of-use-wrapper">',
        '#suffix' => '</div>',
        '#type' => 'fieldset',
        '#title' => "Terms of user",
        '#weight' => 10,
    );
    $href = $base_url. '/sites/default/files/term_'. $language->language. '.pdf';
    // Adding the checkbox to the fieldset.
    $form['terms_of_use']['terms_of_use'] = array(
        '#type' => 'checkbox',
        '#title' => t('By clicking Create new account, you accept the <a href="@url" target="@target">Terms and conditions</a>', array(
            '@url' => $href,
            '@target' => '_blank'
        )),
        '#required' => TRUE,
    );

    return $form;
}
